---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: yandexmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: YandexMachine
    listKind: YandexMachineList
    plural: yandexmachines
    singular: yandexmachine
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: YandexMachine is the Schema for the yandexmachines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: YandexMachineSpec defines the desired state of YandexMachine.
            properties:
              bootDisk:
                description: Disk is boot storage configuration for YandexCloud VM.
                properties:
                  imageID:
                    description: ImageID is the identifier for OS image of YandexCloud
                      VM.
                    type: string
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      Size is the disk size in bytes
                      Allows to specify k,M,G... or Ki,Mi,Gi... suffixes
                      For more information see https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity .
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  typeID:
                    default: network-ssd
                    description: |-
                      TypeID is the disk storage type for YandexCloud VM
                      Possible values: network-ssd, network-hdd, network-ssd-nonreplicated, network-ssd-io-m3
                      More information https://cloud.yandex.ru/ru/docs/compute/concepts/disk .
                    type: string
                required:
                - imageID
                - size
                type: object
              networkInterfaces:
                description: NetworkInterfaces is a network interfaces configurations
                  for YandexCloud VM
                items:
                  description: NetworkInterface defines the network interface configuration
                    of YandexCloud VM.
                  properties:
                    hasPublicIP:
                      default: false
                      description: HasPublicIP is set to true if public IP for YandexCloud
                        VM is needed.
                      type: boolean
                    subnetID:
                      description: SubnetID is the identifier of subnetwork to use
                        for this instance.
                      type: string
                  required:
                  - subnetID
                  type: object
                type: array
              platformID:
                default: standard-v3
                description: |-
                  PlatformID is the identifier of YandexCloud current CPU model.
                  For example: standard-v1, standard-v2, standard-v3, highfreq-v3
                  With GPU: gpu-standard-v1, gpu-standard-v2, gpu-standard-v3, standard-v3-t4
                  More information https://cloud.yandex.ru/ru/docs/compute/concepts/vm-platforms .
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              resources:
                description: Resources contains computing resources of YandexCloud
                  VM.
                properties:
                  coreFraction:
                    default: 100
                    description: |-
                      CoreFraction is baseline level of CPU performance with the ability to burst performance above that baseline level.
                      This field sets baseline performance for each core.
                      For more information see https://yandex.cloud/en/docs/compute/concepts/performance-levels
                    format: int64
                    maximum: 100
                    minimum: 0
                    type: integer
                  cores:
                    description: Cores is the number of cpu cores for YandexCloud
                      VM.
                    format: int64
                    type: integer
                  gpus:
                    description: GPUs is the number of GPUs available for YandexCloud
                      VM.
                    format: int64
                    type: integer
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      Memory is the RAM memory size for YandexCloud VM in bytes
                      Allows to specify k,M,G... or Ki,Mi,Gi... suffixes
                      For more information see https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity .
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                required:
                - cores
                - memory
                type: object
              zoneID:
                default: ru-central1-d
                description: ZoneID is the identifier of YandexCloud availability
                  zone.
                type: string
            required:
            - bootDisk
            - networkInterfaces
            - resources
            type: object
          status:
            description: YandexMachineStatus defines the observed state of YandexMachine.
            properties:
              addresses:
                description: Addresses contains the YandexCloud instance associated
                  addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the YandexMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.

                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.

                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.

                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.

                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              instanceState:
                description: InstanceStatus is the status of the Yandex instance for
                  this machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
